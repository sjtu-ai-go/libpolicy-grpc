// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: message.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "message.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace gocnn {

namespace {

const ::google::protobuf::Descriptor* RequestV1_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RequestV1_reflection_ = NULL;
const ::google::protobuf::Descriptor* ResponseV1_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ResponseV1_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_message_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_message_2eproto() {
  protobuf_AddDesc_message_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "message.proto");
  GOOGLE_CHECK(file != NULL);
  RequestV1_descriptor_ = file->message_type(0);
  static const int RequestV1_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestV1, board_size_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestV1, our_group_lib1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestV1, our_group_lib2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestV1, our_group_lib3_plus_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestV1, oppo_group_lib1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestV1, oppo_group_lib2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestV1, oppo_group_lib3_plus_),
  };
  RequestV1_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      RequestV1_descriptor_,
      RequestV1::default_instance_,
      RequestV1_offsets_,
      -1,
      -1,
      -1,
      sizeof(RequestV1),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestV1, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestV1, _is_default_instance_));
  ResponseV1_descriptor_ = file->message_type(1);
  static const int ResponseV1_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResponseV1, board_size_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResponseV1, possibility_),
  };
  ResponseV1_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ResponseV1_descriptor_,
      ResponseV1::default_instance_,
      ResponseV1_offsets_,
      -1,
      -1,
      -1,
      sizeof(ResponseV1),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResponseV1, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResponseV1, _is_default_instance_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_message_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      RequestV1_descriptor_, &RequestV1::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ResponseV1_descriptor_, &ResponseV1::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_message_2eproto() {
  delete RequestV1::default_instance_;
  delete RequestV1_reflection_;
  delete ResponseV1::default_instance_;
  delete ResponseV1_reflection_;
}

void protobuf_AddDesc_message_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_message_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\rmessage.proto\022\005gocnn\"\274\001\n\tRequestV1\022\022\n\n"
    "board_size\030\001 \001(\005\022\026\n\016our_group_lib1\030\002 \003(\010"
    "\022\026\n\016our_group_lib2\030\003 \003(\010\022\033\n\023our_group_li"
    "b3_plus\030\004 \003(\010\022\027\n\017oppo_group_lib1\030\005 \003(\010\022\027"
    "\n\017oppo_group_lib2\030\006 \003(\010\022\034\n\024oppo_group_li"
    "b3_plus\030\007 \003(\010\"5\n\nResponseV1\022\022\n\nboard_siz"
    "e\030\001 \001(\005\022\023\n\013possibility\030\002 \003(\002b\006proto3", 276);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "message.proto", &protobuf_RegisterTypes);
  RequestV1::default_instance_ = new RequestV1();
  ResponseV1::default_instance_ = new ResponseV1();
  RequestV1::default_instance_->InitAsDefaultInstance();
  ResponseV1::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_message_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_message_2eproto {
  StaticDescriptorInitializer_message_2eproto() {
    protobuf_AddDesc_message_2eproto();
  }
} static_descriptor_initializer_message_2eproto_;

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RequestV1::kBoardSizeFieldNumber;
const int RequestV1::kOurGroupLib1FieldNumber;
const int RequestV1::kOurGroupLib2FieldNumber;
const int RequestV1::kOurGroupLib3PlusFieldNumber;
const int RequestV1::kOppoGroupLib1FieldNumber;
const int RequestV1::kOppoGroupLib2FieldNumber;
const int RequestV1::kOppoGroupLib3PlusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RequestV1::RequestV1()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:gocnn.RequestV1)
}

void RequestV1::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

RequestV1::RequestV1(const RequestV1& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:gocnn.RequestV1)
}

void RequestV1::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  board_size_ = 0;
}

RequestV1::~RequestV1() {
  // @@protoc_insertion_point(destructor:gocnn.RequestV1)
  SharedDtor();
}

void RequestV1::SharedDtor() {
  if (this != default_instance_) {
  }
}

void RequestV1::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RequestV1::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RequestV1_descriptor_;
}

const RequestV1& RequestV1::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_message_2eproto();
  return *default_instance_;
}

RequestV1* RequestV1::default_instance_ = NULL;

RequestV1* RequestV1::New(::google::protobuf::Arena* arena) const {
  RequestV1* n = new RequestV1;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RequestV1::Clear() {
// @@protoc_insertion_point(message_clear_start:gocnn.RequestV1)
  board_size_ = 0;
  our_group_lib1_.Clear();
  our_group_lib2_.Clear();
  our_group_lib3_plus_.Clear();
  oppo_group_lib1_.Clear();
  oppo_group_lib2_.Clear();
  oppo_group_lib3_plus_.Clear();
}

bool RequestV1::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gocnn.RequestV1)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 board_size = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &board_size_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_our_group_lib1;
        break;
      }

      // repeated bool our_group_lib1 = 2;
      case 2: {
        if (tag == 18) {
         parse_our_group_lib1:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, this->mutable_our_group_lib1())));
        } else if (tag == 16) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 1, 18, input, this->mutable_our_group_lib1())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_our_group_lib2;
        break;
      }

      // repeated bool our_group_lib2 = 3;
      case 3: {
        if (tag == 26) {
         parse_our_group_lib2:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, this->mutable_our_group_lib2())));
        } else if (tag == 24) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 1, 26, input, this->mutable_our_group_lib2())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_our_group_lib3_plus;
        break;
      }

      // repeated bool our_group_lib3_plus = 4;
      case 4: {
        if (tag == 34) {
         parse_our_group_lib3_plus:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, this->mutable_our_group_lib3_plus())));
        } else if (tag == 32) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 1, 34, input, this->mutable_our_group_lib3_plus())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_oppo_group_lib1;
        break;
      }

      // repeated bool oppo_group_lib1 = 5;
      case 5: {
        if (tag == 42) {
         parse_oppo_group_lib1:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, this->mutable_oppo_group_lib1())));
        } else if (tag == 40) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 1, 42, input, this->mutable_oppo_group_lib1())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_oppo_group_lib2;
        break;
      }

      // repeated bool oppo_group_lib2 = 6;
      case 6: {
        if (tag == 50) {
         parse_oppo_group_lib2:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, this->mutable_oppo_group_lib2())));
        } else if (tag == 48) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 1, 50, input, this->mutable_oppo_group_lib2())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_oppo_group_lib3_plus;
        break;
      }

      // repeated bool oppo_group_lib3_plus = 7;
      case 7: {
        if (tag == 58) {
         parse_oppo_group_lib3_plus:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, this->mutable_oppo_group_lib3_plus())));
        } else if (tag == 56) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 1, 58, input, this->mutable_oppo_group_lib3_plus())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:gocnn.RequestV1)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gocnn.RequestV1)
  return false;
#undef DO_
}

void RequestV1::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gocnn.RequestV1)
  // optional int32 board_size = 1;
  if (this->board_size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->board_size(), output);
  }

  // repeated bool our_group_lib1 = 2;
  if (this->our_group_lib1_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_our_group_lib1_cached_byte_size_);
  }
  for (int i = 0; i < this->our_group_lib1_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBoolNoTag(
      this->our_group_lib1(i), output);
  }

  // repeated bool our_group_lib2 = 3;
  if (this->our_group_lib2_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(3, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_our_group_lib2_cached_byte_size_);
  }
  for (int i = 0; i < this->our_group_lib2_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBoolNoTag(
      this->our_group_lib2(i), output);
  }

  // repeated bool our_group_lib3_plus = 4;
  if (this->our_group_lib3_plus_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(4, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_our_group_lib3_plus_cached_byte_size_);
  }
  for (int i = 0; i < this->our_group_lib3_plus_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBoolNoTag(
      this->our_group_lib3_plus(i), output);
  }

  // repeated bool oppo_group_lib1 = 5;
  if (this->oppo_group_lib1_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(5, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_oppo_group_lib1_cached_byte_size_);
  }
  for (int i = 0; i < this->oppo_group_lib1_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBoolNoTag(
      this->oppo_group_lib1(i), output);
  }

  // repeated bool oppo_group_lib2 = 6;
  if (this->oppo_group_lib2_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(6, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_oppo_group_lib2_cached_byte_size_);
  }
  for (int i = 0; i < this->oppo_group_lib2_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBoolNoTag(
      this->oppo_group_lib2(i), output);
  }

  // repeated bool oppo_group_lib3_plus = 7;
  if (this->oppo_group_lib3_plus_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(7, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_oppo_group_lib3_plus_cached_byte_size_);
  }
  for (int i = 0; i < this->oppo_group_lib3_plus_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBoolNoTag(
      this->oppo_group_lib3_plus(i), output);
  }

  // @@protoc_insertion_point(serialize_end:gocnn.RequestV1)
}

::google::protobuf::uint8* RequestV1::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:gocnn.RequestV1)
  // optional int32 board_size = 1;
  if (this->board_size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->board_size(), target);
  }

  // repeated bool our_group_lib1 = 2;
  if (this->our_group_lib1_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _our_group_lib1_cached_byte_size_, target);
  }
  for (int i = 0; i < this->our_group_lib1_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBoolNoTagToArray(this->our_group_lib1(i), target);
  }

  // repeated bool our_group_lib2 = 3;
  if (this->our_group_lib2_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      3,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _our_group_lib2_cached_byte_size_, target);
  }
  for (int i = 0; i < this->our_group_lib2_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBoolNoTagToArray(this->our_group_lib2(i), target);
  }

  // repeated bool our_group_lib3_plus = 4;
  if (this->our_group_lib3_plus_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      4,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _our_group_lib3_plus_cached_byte_size_, target);
  }
  for (int i = 0; i < this->our_group_lib3_plus_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBoolNoTagToArray(this->our_group_lib3_plus(i), target);
  }

  // repeated bool oppo_group_lib1 = 5;
  if (this->oppo_group_lib1_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      5,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _oppo_group_lib1_cached_byte_size_, target);
  }
  for (int i = 0; i < this->oppo_group_lib1_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBoolNoTagToArray(this->oppo_group_lib1(i), target);
  }

  // repeated bool oppo_group_lib2 = 6;
  if (this->oppo_group_lib2_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      6,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _oppo_group_lib2_cached_byte_size_, target);
  }
  for (int i = 0; i < this->oppo_group_lib2_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBoolNoTagToArray(this->oppo_group_lib2(i), target);
  }

  // repeated bool oppo_group_lib3_plus = 7;
  if (this->oppo_group_lib3_plus_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      7,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _oppo_group_lib3_plus_cached_byte_size_, target);
  }
  for (int i = 0; i < this->oppo_group_lib3_plus_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBoolNoTagToArray(this->oppo_group_lib3_plus(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:gocnn.RequestV1)
  return target;
}

int RequestV1::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:gocnn.RequestV1)
  int total_size = 0;

  // optional int32 board_size = 1;
  if (this->board_size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->board_size());
  }

  // repeated bool our_group_lib1 = 2;
  {
    int data_size = 0;
    data_size = 1 * this->our_group_lib1_size();
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _our_group_lib1_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated bool our_group_lib2 = 3;
  {
    int data_size = 0;
    data_size = 1 * this->our_group_lib2_size();
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _our_group_lib2_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated bool our_group_lib3_plus = 4;
  {
    int data_size = 0;
    data_size = 1 * this->our_group_lib3_plus_size();
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _our_group_lib3_plus_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated bool oppo_group_lib1 = 5;
  {
    int data_size = 0;
    data_size = 1 * this->oppo_group_lib1_size();
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _oppo_group_lib1_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated bool oppo_group_lib2 = 6;
  {
    int data_size = 0;
    data_size = 1 * this->oppo_group_lib2_size();
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _oppo_group_lib2_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated bool oppo_group_lib3_plus = 7;
  {
    int data_size = 0;
    data_size = 1 * this->oppo_group_lib3_plus_size();
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _oppo_group_lib3_plus_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RequestV1::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gocnn.RequestV1)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const RequestV1* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const RequestV1>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gocnn.RequestV1)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gocnn.RequestV1)
    MergeFrom(*source);
  }
}

void RequestV1::MergeFrom(const RequestV1& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gocnn.RequestV1)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  our_group_lib1_.MergeFrom(from.our_group_lib1_);
  our_group_lib2_.MergeFrom(from.our_group_lib2_);
  our_group_lib3_plus_.MergeFrom(from.our_group_lib3_plus_);
  oppo_group_lib1_.MergeFrom(from.oppo_group_lib1_);
  oppo_group_lib2_.MergeFrom(from.oppo_group_lib2_);
  oppo_group_lib3_plus_.MergeFrom(from.oppo_group_lib3_plus_);
  if (from.board_size() != 0) {
    set_board_size(from.board_size());
  }
}

void RequestV1::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gocnn.RequestV1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RequestV1::CopyFrom(const RequestV1& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gocnn.RequestV1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RequestV1::IsInitialized() const {

  return true;
}

void RequestV1::Swap(RequestV1* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RequestV1::InternalSwap(RequestV1* other) {
  std::swap(board_size_, other->board_size_);
  our_group_lib1_.UnsafeArenaSwap(&other->our_group_lib1_);
  our_group_lib2_.UnsafeArenaSwap(&other->our_group_lib2_);
  our_group_lib3_plus_.UnsafeArenaSwap(&other->our_group_lib3_plus_);
  oppo_group_lib1_.UnsafeArenaSwap(&other->oppo_group_lib1_);
  oppo_group_lib2_.UnsafeArenaSwap(&other->oppo_group_lib2_);
  oppo_group_lib3_plus_.UnsafeArenaSwap(&other->oppo_group_lib3_plus_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RequestV1::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RequestV1_descriptor_;
  metadata.reflection = RequestV1_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RequestV1

// optional int32 board_size = 1;
void RequestV1::clear_board_size() {
  board_size_ = 0;
}
 ::google::protobuf::int32 RequestV1::board_size() const {
  // @@protoc_insertion_point(field_get:gocnn.RequestV1.board_size)
  return board_size_;
}
 void RequestV1::set_board_size(::google::protobuf::int32 value) {
  
  board_size_ = value;
  // @@protoc_insertion_point(field_set:gocnn.RequestV1.board_size)
}

// repeated bool our_group_lib1 = 2;
int RequestV1::our_group_lib1_size() const {
  return our_group_lib1_.size();
}
void RequestV1::clear_our_group_lib1() {
  our_group_lib1_.Clear();
}
 bool RequestV1::our_group_lib1(int index) const {
  // @@protoc_insertion_point(field_get:gocnn.RequestV1.our_group_lib1)
  return our_group_lib1_.Get(index);
}
 void RequestV1::set_our_group_lib1(int index, bool value) {
  our_group_lib1_.Set(index, value);
  // @@protoc_insertion_point(field_set:gocnn.RequestV1.our_group_lib1)
}
 void RequestV1::add_our_group_lib1(bool value) {
  our_group_lib1_.Add(value);
  // @@protoc_insertion_point(field_add:gocnn.RequestV1.our_group_lib1)
}
 const ::google::protobuf::RepeatedField< bool >&
RequestV1::our_group_lib1() const {
  // @@protoc_insertion_point(field_list:gocnn.RequestV1.our_group_lib1)
  return our_group_lib1_;
}
 ::google::protobuf::RepeatedField< bool >*
RequestV1::mutable_our_group_lib1() {
  // @@protoc_insertion_point(field_mutable_list:gocnn.RequestV1.our_group_lib1)
  return &our_group_lib1_;
}

// repeated bool our_group_lib2 = 3;
int RequestV1::our_group_lib2_size() const {
  return our_group_lib2_.size();
}
void RequestV1::clear_our_group_lib2() {
  our_group_lib2_.Clear();
}
 bool RequestV1::our_group_lib2(int index) const {
  // @@protoc_insertion_point(field_get:gocnn.RequestV1.our_group_lib2)
  return our_group_lib2_.Get(index);
}
 void RequestV1::set_our_group_lib2(int index, bool value) {
  our_group_lib2_.Set(index, value);
  // @@protoc_insertion_point(field_set:gocnn.RequestV1.our_group_lib2)
}
 void RequestV1::add_our_group_lib2(bool value) {
  our_group_lib2_.Add(value);
  // @@protoc_insertion_point(field_add:gocnn.RequestV1.our_group_lib2)
}
 const ::google::protobuf::RepeatedField< bool >&
RequestV1::our_group_lib2() const {
  // @@protoc_insertion_point(field_list:gocnn.RequestV1.our_group_lib2)
  return our_group_lib2_;
}
 ::google::protobuf::RepeatedField< bool >*
RequestV1::mutable_our_group_lib2() {
  // @@protoc_insertion_point(field_mutable_list:gocnn.RequestV1.our_group_lib2)
  return &our_group_lib2_;
}

// repeated bool our_group_lib3_plus = 4;
int RequestV1::our_group_lib3_plus_size() const {
  return our_group_lib3_plus_.size();
}
void RequestV1::clear_our_group_lib3_plus() {
  our_group_lib3_plus_.Clear();
}
 bool RequestV1::our_group_lib3_plus(int index) const {
  // @@protoc_insertion_point(field_get:gocnn.RequestV1.our_group_lib3_plus)
  return our_group_lib3_plus_.Get(index);
}
 void RequestV1::set_our_group_lib3_plus(int index, bool value) {
  our_group_lib3_plus_.Set(index, value);
  // @@protoc_insertion_point(field_set:gocnn.RequestV1.our_group_lib3_plus)
}
 void RequestV1::add_our_group_lib3_plus(bool value) {
  our_group_lib3_plus_.Add(value);
  // @@protoc_insertion_point(field_add:gocnn.RequestV1.our_group_lib3_plus)
}
 const ::google::protobuf::RepeatedField< bool >&
RequestV1::our_group_lib3_plus() const {
  // @@protoc_insertion_point(field_list:gocnn.RequestV1.our_group_lib3_plus)
  return our_group_lib3_plus_;
}
 ::google::protobuf::RepeatedField< bool >*
RequestV1::mutable_our_group_lib3_plus() {
  // @@protoc_insertion_point(field_mutable_list:gocnn.RequestV1.our_group_lib3_plus)
  return &our_group_lib3_plus_;
}

// repeated bool oppo_group_lib1 = 5;
int RequestV1::oppo_group_lib1_size() const {
  return oppo_group_lib1_.size();
}
void RequestV1::clear_oppo_group_lib1() {
  oppo_group_lib1_.Clear();
}
 bool RequestV1::oppo_group_lib1(int index) const {
  // @@protoc_insertion_point(field_get:gocnn.RequestV1.oppo_group_lib1)
  return oppo_group_lib1_.Get(index);
}
 void RequestV1::set_oppo_group_lib1(int index, bool value) {
  oppo_group_lib1_.Set(index, value);
  // @@protoc_insertion_point(field_set:gocnn.RequestV1.oppo_group_lib1)
}
 void RequestV1::add_oppo_group_lib1(bool value) {
  oppo_group_lib1_.Add(value);
  // @@protoc_insertion_point(field_add:gocnn.RequestV1.oppo_group_lib1)
}
 const ::google::protobuf::RepeatedField< bool >&
RequestV1::oppo_group_lib1() const {
  // @@protoc_insertion_point(field_list:gocnn.RequestV1.oppo_group_lib1)
  return oppo_group_lib1_;
}
 ::google::protobuf::RepeatedField< bool >*
RequestV1::mutable_oppo_group_lib1() {
  // @@protoc_insertion_point(field_mutable_list:gocnn.RequestV1.oppo_group_lib1)
  return &oppo_group_lib1_;
}

// repeated bool oppo_group_lib2 = 6;
int RequestV1::oppo_group_lib2_size() const {
  return oppo_group_lib2_.size();
}
void RequestV1::clear_oppo_group_lib2() {
  oppo_group_lib2_.Clear();
}
 bool RequestV1::oppo_group_lib2(int index) const {
  // @@protoc_insertion_point(field_get:gocnn.RequestV1.oppo_group_lib2)
  return oppo_group_lib2_.Get(index);
}
 void RequestV1::set_oppo_group_lib2(int index, bool value) {
  oppo_group_lib2_.Set(index, value);
  // @@protoc_insertion_point(field_set:gocnn.RequestV1.oppo_group_lib2)
}
 void RequestV1::add_oppo_group_lib2(bool value) {
  oppo_group_lib2_.Add(value);
  // @@protoc_insertion_point(field_add:gocnn.RequestV1.oppo_group_lib2)
}
 const ::google::protobuf::RepeatedField< bool >&
RequestV1::oppo_group_lib2() const {
  // @@protoc_insertion_point(field_list:gocnn.RequestV1.oppo_group_lib2)
  return oppo_group_lib2_;
}
 ::google::protobuf::RepeatedField< bool >*
RequestV1::mutable_oppo_group_lib2() {
  // @@protoc_insertion_point(field_mutable_list:gocnn.RequestV1.oppo_group_lib2)
  return &oppo_group_lib2_;
}

// repeated bool oppo_group_lib3_plus = 7;
int RequestV1::oppo_group_lib3_plus_size() const {
  return oppo_group_lib3_plus_.size();
}
void RequestV1::clear_oppo_group_lib3_plus() {
  oppo_group_lib3_plus_.Clear();
}
 bool RequestV1::oppo_group_lib3_plus(int index) const {
  // @@protoc_insertion_point(field_get:gocnn.RequestV1.oppo_group_lib3_plus)
  return oppo_group_lib3_plus_.Get(index);
}
 void RequestV1::set_oppo_group_lib3_plus(int index, bool value) {
  oppo_group_lib3_plus_.Set(index, value);
  // @@protoc_insertion_point(field_set:gocnn.RequestV1.oppo_group_lib3_plus)
}
 void RequestV1::add_oppo_group_lib3_plus(bool value) {
  oppo_group_lib3_plus_.Add(value);
  // @@protoc_insertion_point(field_add:gocnn.RequestV1.oppo_group_lib3_plus)
}
 const ::google::protobuf::RepeatedField< bool >&
RequestV1::oppo_group_lib3_plus() const {
  // @@protoc_insertion_point(field_list:gocnn.RequestV1.oppo_group_lib3_plus)
  return oppo_group_lib3_plus_;
}
 ::google::protobuf::RepeatedField< bool >*
RequestV1::mutable_oppo_group_lib3_plus() {
  // @@protoc_insertion_point(field_mutable_list:gocnn.RequestV1.oppo_group_lib3_plus)
  return &oppo_group_lib3_plus_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ResponseV1::kBoardSizeFieldNumber;
const int ResponseV1::kPossibilityFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ResponseV1::ResponseV1()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:gocnn.ResponseV1)
}

void ResponseV1::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

ResponseV1::ResponseV1(const ResponseV1& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:gocnn.ResponseV1)
}

void ResponseV1::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  board_size_ = 0;
}

ResponseV1::~ResponseV1() {
  // @@protoc_insertion_point(destructor:gocnn.ResponseV1)
  SharedDtor();
}

void ResponseV1::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ResponseV1::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ResponseV1::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ResponseV1_descriptor_;
}

const ResponseV1& ResponseV1::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_message_2eproto();
  return *default_instance_;
}

ResponseV1* ResponseV1::default_instance_ = NULL;

ResponseV1* ResponseV1::New(::google::protobuf::Arena* arena) const {
  ResponseV1* n = new ResponseV1;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ResponseV1::Clear() {
// @@protoc_insertion_point(message_clear_start:gocnn.ResponseV1)
  board_size_ = 0;
  possibility_.Clear();
}

bool ResponseV1::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gocnn.ResponseV1)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 board_size = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &board_size_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_possibility;
        break;
      }

      // repeated float possibility = 2;
      case 2: {
        if (tag == 18) {
         parse_possibility:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_possibility())));
        } else if (tag == 21) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 18, input, this->mutable_possibility())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:gocnn.ResponseV1)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gocnn.ResponseV1)
  return false;
#undef DO_
}

void ResponseV1::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gocnn.ResponseV1)
  // optional int32 board_size = 1;
  if (this->board_size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->board_size(), output);
  }

  // repeated float possibility = 2;
  if (this->possibility_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_possibility_cached_byte_size_);
  }
  for (int i = 0; i < this->possibility_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFloatNoTag(
      this->possibility(i), output);
  }

  // @@protoc_insertion_point(serialize_end:gocnn.ResponseV1)
}

::google::protobuf::uint8* ResponseV1::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:gocnn.ResponseV1)
  // optional int32 board_size = 1;
  if (this->board_size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->board_size(), target);
  }

  // repeated float possibility = 2;
  if (this->possibility_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _possibility_cached_byte_size_, target);
  }
  for (int i = 0; i < this->possibility_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatNoTagToArray(this->possibility(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:gocnn.ResponseV1)
  return target;
}

int ResponseV1::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:gocnn.ResponseV1)
  int total_size = 0;

  // optional int32 board_size = 1;
  if (this->board_size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->board_size());
  }

  // repeated float possibility = 2;
  {
    int data_size = 0;
    data_size = 4 * this->possibility_size();
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _possibility_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ResponseV1::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gocnn.ResponseV1)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ResponseV1* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ResponseV1>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gocnn.ResponseV1)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gocnn.ResponseV1)
    MergeFrom(*source);
  }
}

void ResponseV1::MergeFrom(const ResponseV1& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gocnn.ResponseV1)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  possibility_.MergeFrom(from.possibility_);
  if (from.board_size() != 0) {
    set_board_size(from.board_size());
  }
}

void ResponseV1::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gocnn.ResponseV1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResponseV1::CopyFrom(const ResponseV1& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gocnn.ResponseV1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResponseV1::IsInitialized() const {

  return true;
}

void ResponseV1::Swap(ResponseV1* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ResponseV1::InternalSwap(ResponseV1* other) {
  std::swap(board_size_, other->board_size_);
  possibility_.UnsafeArenaSwap(&other->possibility_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ResponseV1::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ResponseV1_descriptor_;
  metadata.reflection = ResponseV1_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ResponseV1

// optional int32 board_size = 1;
void ResponseV1::clear_board_size() {
  board_size_ = 0;
}
 ::google::protobuf::int32 ResponseV1::board_size() const {
  // @@protoc_insertion_point(field_get:gocnn.ResponseV1.board_size)
  return board_size_;
}
 void ResponseV1::set_board_size(::google::protobuf::int32 value) {
  
  board_size_ = value;
  // @@protoc_insertion_point(field_set:gocnn.ResponseV1.board_size)
}

// repeated float possibility = 2;
int ResponseV1::possibility_size() const {
  return possibility_.size();
}
void ResponseV1::clear_possibility() {
  possibility_.Clear();
}
 float ResponseV1::possibility(int index) const {
  // @@protoc_insertion_point(field_get:gocnn.ResponseV1.possibility)
  return possibility_.Get(index);
}
 void ResponseV1::set_possibility(int index, float value) {
  possibility_.Set(index, value);
  // @@protoc_insertion_point(field_set:gocnn.ResponseV1.possibility)
}
 void ResponseV1::add_possibility(float value) {
  possibility_.Add(value);
  // @@protoc_insertion_point(field_add:gocnn.ResponseV1.possibility)
}
 const ::google::protobuf::RepeatedField< float >&
ResponseV1::possibility() const {
  // @@protoc_insertion_point(field_list:gocnn.ResponseV1.possibility)
  return possibility_;
}
 ::google::protobuf::RepeatedField< float >*
ResponseV1::mutable_possibility() {
  // @@protoc_insertion_point(field_mutable_list:gocnn.ResponseV1.possibility)
  return &possibility_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace gocnn

// @@protoc_insertion_point(global_scope)
